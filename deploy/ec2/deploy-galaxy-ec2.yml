# deploy-galaxy-ec2.yml
#
# Build the galaxy distribution file, and then copy it to and install it on the web and celery nodes.
#
# run cmd: ansible-playbook -i ec2.py --extra-vars="@your-var-file.yml" deploy-galaxy-ec2.yml
#

- name: Build the galaxy distribution file
  hosts: localhost
  connection: local
  gather_facts: no

  roles:
    # Replace robots.txt with an empty disallow path
    - role: searchbots
      searchbots_path: ../../galaxy/templates
      searchbots_disallows: []
      when: galaxy_allow_searchbots

  tasks: 
    - name: Install requirements
      command: make requirements
      args:
        chdir: ../..  

    - name: Install node packages
      command: npm install
      args:
        chdir: ../..

    - name: Create the dist file
      command: make sdist
      args:
        chdir: ../..  

    - name: Get the name of the local distribution file
      shell: ls -1 $(pwd)/dist/galaxy-*.tar.gz
      args:
        chdir: ../.. 
      register: dist_file 

    - name: Define galaxy_dist_file
      set_fact:
        galaxy_dist_file: "{{ dist_file.stdout }}"

    - name: Define es_node_list
      set_fact:
        es_node_list: "{% for host in groups[galaxy_hosts_elastic] %}\"{{ hostvars[host]['ec2_private_ip_address'] }}\"{% if not loop.last %},{% endif %}{% endfor %}"

    - name: Define es_url_list
      set_fact:
        es_url_list: "{% for host in groups[galaxy_hosts_elastic] %}\"http://{{ hostvars[host]['ec2_private_ip_address'] }}:9200\"{% if not loop.last %},{% endif %}{% endfor %}"

- name: Copy and install the distribution 
  hosts:
    - "{{ galaxy_hosts_celery }}"
    - "{{ galaxy_hosts_web }}"
  become: yes
  vars: 
    galaxy_postgresql_master: "{% for host in groups[galaxy_hosts_db] %}{% if hostvars[host]['ec2_tag_galaxy_postgres'] == 'master' %}{{ hostvars[host]['ec2_private_ip_address'] }}{% endif %}{% endfor %}"
    galaxy_rabbit_host: "{{ galaxy_postgresql_master }}"
    galaxy_memcached_host: "{{ galaxy_postgresql_master }}"

  roles:

    # Copy the distribution file
    - role: galaxy-dist
      galaxy_dist_file: "{{ hostvars['localhost']['galaxy_dist_file'] }}"
    
    # Install Galaxy 
    - role: galaxy-deploy
      galaxy_database_local: no
      galaxy_wsgi_processes: 2
      galaxy_load_balancer_ip: 127.0.0.1
      galaxy_es_node_list: "{{ hostvars['localhost']['es_node_list'] }}" 
      galaxy_es_url_list: "{{ hostvars['localhost']['es_url_list'] }}"
      inventory_group: "{{ ec2_tag_galaxy_group }}"
      private_ip: "{{ ec2_private_ip_address }}" 
    
    # Use the first host in the web group to perform migrations and rebuild indexes
    - role: galaxy-migrations
      when: inventory_hostname == groups[galaxy_hosts_web][0] 

