---
- name: Set fact root_path 
  set_fact: 
    root_path: '{{ playbook_dir }}/..' 
  tags:
  - start
  - stop

- name: Get version from checkout if not provided
  shell: git describe --long | sed 's/-g.*//' | sed 's/-/./' 
  args: 
    chdir: '{{ root_path }}'
  register: version_command  
  delegate_to: localhost
  when: galaxy_version is not defined
  tags:
  - start
  - stop 

- name: Set global version if not provided
  set_fact:
    galaxy_version: "{{ version_command.stdout }}"
  when: galaxy_version is not defined
  tags:
  - start
  - stop 

- name: Show galaxy version 
  debug: var=galaxy_version
  tags:
  - start
  - stop

- include_tasks: copy_branding.yml
  when: custom_branding_path is defined
  tags:
  - start

- name: Build galaxy-build image
  docker_image:
    buildargs:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
    name: galaxy-build
    tag: latest
    path: '{{ root_path }}'
    dockerfile: scripts/docker-release/Dockerfile.build
  delegate_to: localhost
  tags:
  - start

- name: Run galaxy-build container 
  docker_container:
    image: galaxy-build
    name: galaxy-build
    volumes: 
      - '{{ root_path }}:/galaxy:rw'
  delegate_to: localhost
  tags:
  - start

- name: Wait for galaxy-build to finish
  shell: '{% raw %}docker inspect -f "{{ .State.Running }}" galaxy-build{% endraw %}'
  register: builder_state
  until: builder_state.stdout == 'false'
  retries: 100
  delay: 30
  delegate_to: localhost
  tags:
  - start

- name: Set Galaxy image name
  set_fact:
    galaxy_image: "{{ galaxy_image| default('galaxy') }}"
  tags:
  - start
  - stop

- name: Build the galaxy image
  docker_image: 
    buildargs:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
    name: '{{ galaxy_image }}' 
    tag: '{{ galaxy_version }}' 
    path: '{{ root_path }}'
    dockerfile: scripts/docker-release/Dockerfile
  delegate_to: localhost
  tags:
  - start
  
